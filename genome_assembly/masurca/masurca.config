DATA

#pe reads
PE= p1 450 108 ./reads/250PE_run4_R1.fq.gz ./reads/250PE_run4_R2.fq.gz
PE= p2 408 77 ./reads/250PE_run5_R1.fq.gz ./reads/250PE_run5_R2.fq.gz
PE= p3 408 77 ./reads/250PE_run7_L1_R1.fq.gz ./reads/250PE_run7_L1_R2.fq.gz
PE= p4 408 77 ./reads/250PE_run7_L2_R1.fq.gz ./reads/250PE_run7_L2_R2.fq.gz

#MP reads 3kb insert
JUMP= a1 2693 491 ./reads/MP_75bp_lib1/NOR3kb_A_R1.fastq ./reads/MP_75bp_lib1/NOR3kb_A_R2.fastq
JUMP= a2 2693 491 ./reads/MP_75bp_lib1/NOR3kb_B_R1.fastq ./reads/MP_75bp_lib1/NOR3kb_B_R2.fastq
JUMP= a3 2693 491 ./reads/MP_75bp_lib1/NOR3kb_C_R1.fastq ./reads/MP_75bp_lib1/NOR3kb_C_R2.fastq
JUMP= a4 2693 491 ./reads/MP_150bp_lib1/NOR_3kb_A_R1.fastq ./reads/MP_150bp_lib1/NOR_3kb_A_R2.fastq
JUMP= a5 2693 491 ./reads/MP_150bp_lib1/NOR_3kb_B_R1.fastq ./reads/MP_150bp_lib1/NOR_3kb_B_R2.fastq
JUMP= a6 2693 491 ./reads/MP_150bp_lib1/NOR_3kb_C_R1.fastq ./reads/MP_150bp_lib1/NOR_3kb_C_R2.fastq

#MP reads 8kb insert, double peaks
JUMP= b1 5448 2267 ./reads/MP_75bp_lib1/NOR8kb_A_R1.fastq ./reads/MP_75bp_lib1/NOR8kb_A_R2.fastq
JUMP= b2 5448 2267 ./reads/MP_75bp_lib1/NOR8kb_B_R1.fastq ./reads/MP_75bp_lib1/NOR8kb_B_R2.fastq
JUMP= b3 5448 2267 ./reads/MP_75bp_lib1/NOR8kb_C_R1.fastq ./reads/MP_75bp_lib1/NOR8kb_C_R2.fastq
JUMP= b4 5448 2267 ./reads/MP_150bp_lib1/NOR_8kb_A_R1.fastq ./reads/MP_150bp_lib1/NOR_8kb_A_R2.fastq
JUMP= b5 5448 2267 ./reads/MP_150bp_lib1/NOR_8kb_B_R1.fastq ./reads/MP_150bp_lib1/NOR_8kb_B_R2.fastq
JUMP= b6 5448 2267 ./reads/MP_150bp_lib1/NOR_8kb_C_R1.fastq ./reads/MP_150bp_lib1/NOR_8kb_C_R2.fastq


#MP reads 8kb insert
JUMP= c1 7103 751 ./reads/MP_150bp_lib2/NOR_8kb-Wdh_A_R1.fastq ./reads/MP_150bp_lib2/NOR_8kb-Wdh_A_R2.fastq
JUMP= c2 7103 751 ./reads/MP_150bp_lib2/NOR_8kb-Wdh_B_R1.fastq ./reads/MP_150bp_lib2/NOR_8kb-Wdh_B_R2.fastq
JUMP= c3 7103 751 ./reads/MP_150bp_lib2/NOR_8kb-Wdh_C_R1.fastq ./reads/MP_150bp_lib2/NOR_8kb-Wdh_C_R2.fastq

#MP failed 12kb insert, used as 3kb
JUMP= d1 4552 2729 ./reads/MP_75bp_lib1/NOR12kb_A_R1.fastq ./reads/MP_75bp_lib1/NOR12kb_A_R2.fastq
JUMP= d2 4552 2729 ./reads/MP_75bp_lib1/NOR12kb_B_R1.fastq ./reads/MP_75bp_lib1/NOR12kb_B_R2.fastq
JUMP= d3 4552 2729 ./reads/MP_75bp_lib1/NOR12kb_C_R1.fastq ./reads/MP_75bp_lib1/NOR12kb_C_R2.fastq
JUMP= d4 4552 2729 ./reads/MP_150bp_lib1/NOR_12kb_A_R1.fastq ./reads/MP_150bp_lib1/NOR_12kb_A_R2.fastq
JUMP= d5 4552 2729 ./reads/MP_150bp_lib1/NOR_12kb_B_R1.fastq ./reads/MP_150bp_lib1/NOR_12kb_B_R2.fastq
JUMP= d6 4552 2729 ./reads/MP_150bp_lib1/NOR_12kb_C_R1.fastq ./reads/MP_150bp_lib1/NOR_12kb_C_R2.fastq

#MP 12kb insert
JUMP= e1 10419 1826 ./reads/MP_150bp_lib2/NOR_12kb-Wdh_A_R1.fastq ./reads/MP_150bp_lib2/NOR_12kb-Wdh_A_R2.fastq
JUMP= e2 10419 1826 ./reads/MP_150bp_lib2/NOR_12kb-Wdh_B_R1.fastq ./reads/MP_150bp_lib2/NOR_12kb-Wdh_B_R2.fastq
JUMP= e3 10419 1826 ./reads/MP_150bp_lib2/NOR_12kb-Wdh_C_R1.fastq ./reads/MP_150bp_lib2/NOR_12kb-Wdh_C_R2.fastq



END
PARAMETERS
#this is k-mer size for deBruijn graph values between 25 and 101 are supported, auto will compute the optimal size based on the read data and GC content. Do not set this longer than PE read length!!!
GRAPH_KMER_SIZE=auto
#set this to 1 for Illumina-only assemblies and to 0 if you have 2x or more long (Sanger, 454) reads
USE_LINKING_MATES=1
#this parameter is useful if you have too many jumping library mates. Typically set it to 60 for bacteria and something large (300) for mammals
LIMIT_JUMP_COVERAGE = 300
#these are the additional parameters to Celera Assembler. do not
#worry about performance, number or processors or batch sizes -- these
#are computed automatically. for mammals do not set cgwErrorRate above
#0.15!!!
CA_PARAMETERS = ovlMerSize=30 cgwErrorRate=0.10 ovlMemory=4GB
#auto-detected number of cpus to use
NUM_THREADS= 40
#this is mandatory jellyfish hash size â€“ 10x the genome size is a good
#starting value
JF_SIZE=10000000000
#this specifies if we do (1) or do not (0) want to trim long runs of
#homopolymers (e.g. GGGGGGGG) from 3' read ends, use it for high GC
#genomes
DO_HOMOPOLYMER_TRIM=0
END 
